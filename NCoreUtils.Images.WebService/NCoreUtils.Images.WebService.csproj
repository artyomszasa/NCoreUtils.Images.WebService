<Project Sdk="Microsoft.NET.Sdk.Web">
  <PropertyGroup>
    <TargetFramework>netcoreapp3.1</TargetFramework>
    <Version>3.1.0-alpha5</Version>
    <IsPackable>false</IsPackable>
    <LangVersion>8.0</LangVersion>
    <Nullable>enable</Nullable>
    <AspNetCoreHostingModel>OutOfProcess</AspNetCoreHostingModel>
    <ServerGarbageCollection>false</ServerGarbageCollection>
    <RetainVMGarbageCollection>false</RetainVMGarbageCollection>
    <TargetLatestRuntimePatch>true</TargetLatestRuntimePatch>
    <PublishReadyToRun>true</PublishReadyToRun>
    <PublishReadyToRunShowWarnings>true</PublishReadyToRunShowWarnings>
    <PublishTrimmed>true</PublishTrimmed>
    <RootNamespace>NCoreUtils.Images</RootNamespace>
  </PropertyGroup>
  <ItemGroup>
    <TrimmerRootAssembly Include="System.Threading.Tasks" />
    <TrimmerRootAssembly Include="System.Web.HttpUtility" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\NCoreUtils.Images.WebService.Shared\NCoreUtils.Images.WebService.Shared.csproj" />
  </ItemGroup>
  <ItemGroup>
    <PackageReference Include="NCoreUtils.Images.GoogleCloudStorage" Version="3.1.0-alpha2" />
    <PackageReference Include="NCoreUtils.Images.ImageMagick" Version="3.1.0-alpha2" />
  </ItemGroup>
  <Target Name="DockerBuild">
    <!-- Ensure properties -->
    <PropertyGroup>
      <DockerFile Condition=" '$(DockerFile)' == '' ">Dockerfile</DockerFile>
      <DockerImageName Condition=" '$(DockerImageName)' ==  '' ">$(AssemblyName.ToLowerInvariant().Replace('.', '-'))</DockerImageName>
      <DockerImageVersion Condition=" '$(DockerImageVersion)' == '' ">$(Version)</DockerImageVersion>
      <DockerFilePath>$([MSBuild]::GetPathOfFileAbove($(DockerFile)))</DockerFilePath>
      <DockerRootPath>$([System.IO.Path]::GetDirectoryName($(DockerFilePath)))</DockerRootPath>
    </PropertyGroup>
    <!-- Execute docker -->
    <Exec Command="docker build -t $(DockerImageName):$(DockerImageVersion) -f $(DockerFilePath) $(DockerRootPath)" />
  </Target>
  <Target Name="PrintAllReferences" DependsOnTargets="RunResolvePackageDependencies">
    <Message Importance="High" Text="Referenced package: %(PackageDefinitions.Identity)" />
  </Target>
</Project>
